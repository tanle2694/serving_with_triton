version: '3.9'

services:
  db:
    image: postgres:latest
    container_name: db
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USERNAME}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PGDATA=/var/lib/postgresql/data/
    volumes:
      - postgresql_db_data:/var/lib/postgresql/data/
    expose:
      - 5432
    ports:
      - 5432:5432
  minio:
    image: quay.io/minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    environment:
      - MINIO_ROOT_USER=ROOTNAME
      - MINIO_ROOT_PASSWORD=CHANGEME123
    command: server /data --console-address ":9001"
    restart: unless-stopped
  # db_editor:
  #   image: adminer
  #   container_name: db_editor
  #   restart: always
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USERNAME}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #   expose:
  #     - 8080
  #   ports:
  #     - 8081:8080
  #   depends_on:
  #     - db

  # backend_app:
  #   container_name: backend_app
  #   restart: always
  #   build:
  #     dockerfile: Dockerfile
  #     context: ./backend/
  #   environment:
  #     - ENVIRONMENT=${ENVIRONMENT}
  #     - DEBUG=${DEBUG}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #     - POSTGRES_SCHEMA=${POSTGRES_SCHEMA}
  #     - POSTGRES_USERNAME=${POSTGRES_USERNAME}
  #     - BACKEND_SERVER_HOST=${BACKEND_SERVER_HOST}
  #     - BACKEND_SERVER_PORT=${BACKEND_SERVER_PORT}
  #     - BACKEND_SERVER_WORKERS=${BACKEND_SERVER_WORKERS}
  #     - DB_TIMEOUT=${DB_TIMEOUT}
  #     - DB_POOL_SIZE=${DB_POOL_SIZE}
  #     - DB_MAX_POOL_CON=${DB_MAX_POOL_CON}
  #     - DB_POOL_OVERFLOW=${DB_POOL_OVERFLOW}
  #     - IS_DB_ECHO_LOG=${IS_DB_ECHO_LOG}
  #     - IS_DB_EXPIRE_ON_COMMIT=${IS_DB_EXPIRE_ON_COMMIT}
  #     - IS_DB_FORCE_ROLLBACK=${IS_DB_FORCE_ROLLBACK}
  #     - IS_ALLOWED_CREDENTIALS=${IS_ALLOWED_CREDENTIALS}
  #     - API_TOKEN=${API_TOKEN}
  #     - AUTH_TOKEN=${AUTH_TOKEN}
      
  #   volumes:
  #     - ./backend/:/usr/backend/
  #   expose:
  #     - 8000
  #   ports:
  #     - 8001:8000
  #   depends_on:
  #     - db
  # frontend:
  #   image: 'frontend:latest'
  #   restart: always    
  #   build:
  #     context: ./frontend
  #     args:
  #       # - VITE_API_URL=https://${DOMAIN?Variable not set}
  #       - API_BASE_URL=http://backend:80
  #       - NEXT_PUBLIC_API_BASE_URL=http://localhost:80
  #       - NODE_ENV=production
  #   ports:
  #     - 3000:3000

volumes:
  postgresql_db_data:
  minio_data: